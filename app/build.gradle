/*
 *
 *  Copyright 2019 Hedera Hashgraph LLC
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.jaredsburrows.license'

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.hedera.wallet"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 131
        versionName "1.3.$versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    licenseReport {
        generateHtmlReport = true
        generateJsonReport = true

        // These options are ignored for Java projects
        copyHtmlReportToAssets = true
        copyJsonReportToAssets = false
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "version"
    productFlavors {
        prod {
            dimension "version"
            buildConfigField "boolean", "USE_TEST_NET", "false"
            buildConfigField "boolean", "ALLOW_EDITING_NET", "true"
        }
        dev {
            dimension "version"
            /*applicationIdSuffix ".dev"
            versionNameSuffix "-dev"*/
            buildConfigField "boolean", "USE_TEST_NET", "true"
            buildConfigField "boolean", "ALLOW_EDITING_NET", "true"
        }
    }
}

dependencies {

    def room_version = "2.2.0-beta01"

    //  implementation 'com.google.firebase:firebase-crash:11.8.0'
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }


    // Retrofit / RxJava
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'se.akerfeldt:okhttp-signpost:1.1.0'
    implementation 'oauth.signpost:signpost-core:1.2.1.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    implementation 'com.andretietz.retroauth:retroauth-android:3.0.0-beta7'
    implementation "io.reactivex.rxjava2:rxjava:2.2.4"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.github.doctoror.rxcursorloader:library:2.1.1'



    //Alogrithmic / Encryption
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'net.i2p.crypto:eddsa:0.3.0'

    implementation 'io.grpc:grpc-okhttp:1.14.0'
    implementation 'io.grpc:grpc-protobuf:1.0.0'
    implementation 'io.grpc:grpc-stub:1.14.0'

    implementation 'com.google.guava:guava:24.0-android'


//    api 'androidx.room:room-runtime:2.1.0'
//    annotationProcessor 'androidx.room:room-compiler:2.1.0'

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"



    implementation 'javax.annotation:javax.annotation-api:1.3.1'

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android:1.3.0-3'

    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.3.0@aar'

    implementation 'com.wealthfront:magellan:1.1.0'
    implementation 'com.andrognito.pinlockview:pinlockview:2.1.0'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
        exclude group: 'com.google.code.findbugs'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            javalite {}
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}
